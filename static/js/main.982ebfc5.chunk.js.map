{"version":3,"sources":["component/ListItem.js","component/List.js","App.js","index.js"],"names":["ListItem","props","item","index","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","className","name","score","List","data","droppableId","droppableProps","map","placeholder","App","useState","id","setData","onDragEnd","result","destination","source","newItems","draggedItem","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAoBeA,MAlBf,SAAkBC,GAAQ,IAChBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,OACE,cAAC,IAAD,CAAWC,YAAa,MAAQD,EAAOA,MAAOA,EAA9C,SACG,SAACE,GAAD,OACC,0DACEC,IAAKD,EAASE,UACVF,EAASG,gBACTH,EAASI,iBAHf,IAIEC,UAAU,YAJZ,UAMGR,EAAKS,KANR,MAMiBT,EAAKU,YARgCT,ICqB/CU,MAvBf,SAAcZ,GAAQ,IACZa,EAASb,EAATa,KAER,OACE,qBAAKJ,UAAU,OAAf,SACE,cAAC,IAAD,CAAWK,YAAY,YAAvB,SACG,SAACV,GAAD,OACC,8CACEK,UAAU,gBACNL,EAASW,gBAFf,IAGEV,IAAKD,EAASE,SAHhB,iBAKGO,QALH,IAKGA,OALH,EAKGA,EAAMG,KAAI,SAACf,EAAMC,GAAP,OACT,cAAC,EAAD,CAAsBD,KAAMA,EAAMC,MAAOA,GAA1BA,MAEhBE,EAASa,sB,MCyBPC,MAtCf,WAAgB,IAAD,EACWC,mBAAS,CAC/B,CACEC,GAAI,EACJV,KAAM,WACNC,MAAO,KAET,CACES,GAAI,EACJV,KAAM,WACNC,MAAO,MAVE,mBACNE,EADM,KACAQ,EADA,KA4Bb,OACE,sBAAKZ,UAAU,MAAf,UACE,iDACA,cAAC,IAAD,CAAiBa,UAjBH,SAACC,GACjB,GAAKA,EAAOC,cAEVD,EAAOE,OAAOX,cAAgBS,EAAOC,YAAYV,aACjDS,EAAOE,OAAOvB,QAAUqB,EAAOC,YAAYtB,OAF7C,CAKA,IAAMwB,EAAQ,YAAOb,GACfc,EAAcD,EAASH,EAAOE,OAAOvB,OAC3CwB,EAASE,OAAOL,EAAOE,OAAOvB,MAAO,GACrCwB,EAASE,OAAOL,EAAOC,YAAYtB,MAAO,EAAGyB,GAC7CN,EAAQK,KAMN,SACE,cAAC,EAAD,CAAMb,KAAMA,UChCpBgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.982ebfc5.chunk.js","sourcesContent":["import { Draggable } from \"react-beautiful-dnd\"\n\nfunction ListItem(props) {\n  const { item, index } = props\n  return (\n    <Draggable draggableId={\"id-\" + index} index={index} key={index}>\n      {(provided) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className=\"list-item\"\n        >\n          {item.name} - {item.score}\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default ListItem\n","import ListItem from \"./ListItem\"\nimport { Droppable } from \"react-beautiful-dnd\"\n\nfunction List(props) {\n  const { data } = props\n\n  return (\n    <div className=\"list\">\n      <Droppable droppableId=\"droppable\">\n        {(provided) => (\n          <div\n            className=\"list-content\"\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n          >\n            {data?.map((item, index) => (\n              <ListItem key={index} item={item} index={index} />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  )\n}\n\nexport default List\n","import { useState } from \"react\"\nimport { DragDropContext } from \"react-beautiful-dnd\"\nimport List from \"./component/List\"\nimport \"./css/style.css\"\n\nfunction App() {\n  const [data, setData] = useState([\n    {\n      id: 1,\n      name: \"BTC/USTD\",\n      score: 100,\n    },\n    {\n      id: 2,\n      name: \"DOT/USTD\",\n      score: 40,\n    },\n  ])\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return\n    if (\n      result.source.droppableId === result.destination.droppableId &&\n      result.source.index === result.destination.index\n    )\n      return\n    const newItems = [...data]\n    const draggedItem = newItems[result.source.index]\n    newItems.splice(result.source.index, 1)\n    newItems.splice(result.destination.index, 0, draggedItem)\n    setData(newItems)\n  }\n\n  return (\n    <div className=\"app\">\n      <h2>DragDropContext</h2>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <List data={data} />\n      </DragDropContext>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}